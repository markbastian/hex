;; Analyzed by ClojureScript 1.8.51
{:name grid.hex, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {v vecmath.vec, vecmath.vec vecmath.vec}, :imports nil, :defs {neighbors {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 31, :column 7, :end-line 31, :end-column 16, :arglists (quote ([[i j]]))}, :name grid.hex/neighbors, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 16, :method-params ([p__8663]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}, axial {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 4, :column 7, :end-line 4, :end-column 12, :arglists (quote ([[i j]]))}, :name grid.hex/axial, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 12, :method-params ([p__8636]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}, walk+x {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 60, :column 7, :end-line 60, :end-column 13, :arglists (quote ([hex]))}, :name grid.hex/walk+x, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([hex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hex]))}, line-until {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 17, :column 7, :end-line 17, :end-column 17, :arglists (quote ([f t]))}, :name grid.hex/line-until, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 17, :method-params ([f t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f t]))}, walk+z {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 64, :column 7, :end-line 64, :end-column 13, :arglists (quote ([hex]))}, :name grid.hex/walk+z, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([hex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hex]))}, radial-corners {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 36, :column 7, :end-line 36, :end-column 21, :arglists (quote ([v r]))}, :name grid.hex/radial-corners, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 21, :method-params ([v r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v r]))}, walk-z {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 65, :column 7, :end-line 65, :end-column 13, :arglists (quote ([hex]))}, :name grid.hex/walk-z, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([hex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hex]))}, cube-dist {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 14, :column 7, :end-line 14, :end-column 16, :arglists (quote ([a b]))}, :name grid.hex/cube-dist, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 16, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, ring {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 39, :column 7, :end-line 39, :end-column 11, :arglists (quote ([center radius]))}, :name grid.hex/ring, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 11, :method-params ([center radius]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([center radius]))}, step+z {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 57, :column 7, :end-line 57, :end-column 13, :arglists (quote ([[i j]]))}, :name grid.hex/step+z, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([p__8690]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}, grid {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 28, :column 7, :end-line 28, :end-column 11, :arglists (quote ([minx maxx miny maxy]))}, :name grid.hex/grid, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 11, :method-params ([minx maxx miny maxy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 4, :fn-var true, :arglists (quote ([minx maxx miny maxy]))}, step+y {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 55, :column 7, :end-line 55, :end-column 13, :arglists (quote ([[i j]]))}, :name grid.hex/step+y, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([p__8684]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}, walk+y {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 62, :column 7, :end-line 62, :end-column 13, :arglists (quote ([hex]))}, :name grid.hex/walk+y, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([hex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hex]))}, circle {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 48, :column 7, :end-line 48, :end-column 13, :arglists (quote ([center radius]))}, :name grid.hex/circle, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([center radius]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([center radius]))}, cube-round {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 7, :column 7, :end-line 7, :end-column 17, :arglists (quote ([h]))}, :name grid.hex/cube-round, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 17, :method-params ([h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([h]))}, walk-y {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 63, :column 7, :end-line 63, :end-column 13, :arglists (quote ([hex]))}, :name grid.hex/walk-y, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([hex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hex]))}, line-to {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 26, :column 7, :end-line 26, :end-column 14, :arglists (quote ([f t]))}, :name grid.hex/line-to, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 14, :method-params ([f t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f t]))}, walk-x {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 61, :column 7, :end-line 61, :end-column 13, :arglists (quote ([hex]))}, :name grid.hex/walk-x, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([hex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hex]))}, step-x {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 54, :column 7, :end-line 54, :end-column 13, :arglists (quote ([[i j]]))}, :name grid.hex/step-x, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([p__8681]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}, step-y {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 56, :column 7, :end-line 56, :end-column 13, :arglists (quote ([[i j]]))}, :name grid.hex/step-y, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([p__8687]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}, step+x {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 53, :column 7, :end-line 53, :end-column 13, :arglists (quote ([[i j]]))}, :name grid.hex/step+x, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([p__8678]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}, same-axis? {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 51, :column 7, :end-line 51, :end-column 17, :arglists (quote ([a b]))}, :name grid.hex/same-axis?, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 17, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, cube {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 5, :column 7, :end-line 5, :end-column 11, :arglists (quote ([[i j k :as c]]))}, :name grid.hex/cube, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 11, :method-params ([p__8639]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j k :as c]]))}, step-z {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 58, :column 7, :end-line 58, :end-column 13, :arglists (quote ([[i j]]))}, :name grid.hex/step-z, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([p__8693]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}}}