{:name grid.hex, :doc "Hexagonal coordinate functions and math. These are all integer\n  coordinate functions.", :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {v vecmath.vec, vecmath.vec vecmath.vec}, :imports nil, :defs {neighbors {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 44, :column 7, :end-line 44, :end-column 16, :arglists (quote ([[i j]]))}, :name grid.hex/neighbors, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 16, :method-params ([p__85917]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}, axial {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 6, :column 7, :end-line 6, :end-column 12, :arglists (quote ([[i j]]))}, :name grid.hex/axial, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 12, :method-params ([p__85881]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}, walk+x {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 73, :column 7, :end-line 73, :end-column 13, :arglists (quote ([hex]))}, :name grid.hex/walk+x, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([hex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hex]))}, line-until {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 19, :column 7, :end-line 19, :end-column 17, :arglists (quote ([f t]))}, :name grid.hex/line-until, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 17, :method-params ([f t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f t]))}, line-til {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 30, :column 7, :end-line 30, :end-column 15, :arglists (quote ([f t]))}, :name grid.hex/line-til, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 15, :method-params ([f t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f t]))}, walk+z {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 77, :column 7, :end-line 77, :end-column 13, :arglists (quote ([hex]))}, :name grid.hex/walk+z, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([hex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hex]))}, radial-corners {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 49, :column 7, :end-line 49, :end-column 21, :arglists (quote ([v r]))}, :name grid.hex/radial-corners, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 21, :method-params ([v r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v r]))}, walk-z {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 78, :column 7, :end-line 78, :end-column 13, :arglists (quote ([hex]))}, :name grid.hex/walk-z, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([hex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hex]))}, cube-dist {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 16, :column 7, :end-line 16, :end-column 16, :arglists (quote ([a b]))}, :name grid.hex/cube-dist, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 16, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, ring {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 52, :column 7, :end-line 52, :end-column 11, :arglists (quote ([center radius]))}, :name grid.hex/ring, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 11, :method-params ([center radius]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([center radius]))}, step+z {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 70, :column 7, :end-line 70, :end-column 13, :arglists (quote ([[i j]]))}, :name grid.hex/step+z, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([p__85964]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}, grid {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 41, :column 7, :end-line 41, :end-column 11, :arglists (quote ([minx maxx miny maxy]))}, :name grid.hex/grid, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 11, :method-params ([minx maxx miny maxy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 4, :fn-var true, :arglists (quote ([minx maxx miny maxy]))}, step+y {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 68, :column 7, :end-line 68, :end-column 13, :arglists (quote ([[i j]]))}, :name grid.hex/step+y, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([p__85950]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}, walk+y {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 75, :column 7, :end-line 75, :end-column 13, :arglists (quote ([hex]))}, :name grid.hex/walk+y, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([hex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hex]))}, circle {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 61, :column 7, :end-line 61, :end-column 13, :arglists (quote ([center radius]))}, :name grid.hex/circle, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([center radius]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([center radius]))}, cube-round {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 9, :column 7, :end-line 9, :end-column 17, :arglists (quote ([h]))}, :name grid.hex/cube-round, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 17, :method-params ([h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([h]))}, walk-y {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 76, :column 7, :end-line 76, :end-column 13, :arglists (quote ([hex]))}, :name grid.hex/walk-y, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([hex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hex]))}, line-to {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 28, :column 7, :end-line 28, :end-column 14, :arglists (quote ([f t]))}, :name grid.hex/line-to, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 14, :method-params ([f t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f t]))}, walk-x {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 74, :column 7, :end-line 74, :end-column 13, :arglists (quote ([hex]))}, :name grid.hex/walk-x, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([hex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hex]))}, step-x {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 67, :column 7, :end-line 67, :end-column 13, :arglists (quote ([[i j]]))}, :name grid.hex/step-x, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([p__85943]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}, step-y {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 69, :column 7, :end-line 69, :end-column 13, :arglists (quote ([[i j]]))}, :name grid.hex/step-y, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([p__85957]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}, step+x {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 66, :column 7, :end-line 66, :end-column 13, :arglists (quote ([[i j]]))}, :name grid.hex/step+x, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([p__85936]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}, same-axis? {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 64, :column 7, :end-line 64, :end-column 17, :arglists (quote ([a b]))}, :name grid.hex/same-axis?, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 17, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, cube {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 7, :column 7, :end-line 7, :end-column 11, :arglists (quote ([[i j k :as c]]))}, :name grid.hex/cube, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 11, :method-params ([p__85888]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j k :as c]]))}, step-z {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :line 71, :column 7, :end-line 71, :end-column 13, :arglists (quote ([[i j]]))}, :name grid.hex/step-z, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/hex.cljc", :end-column 13, :method-params ([p__85971]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[i j]]))}}}