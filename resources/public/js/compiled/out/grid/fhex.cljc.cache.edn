{:use-macros nil, :excludes #{}, :name grid.fhex, :imports nil, :requires {v vecmath.vec, vecmath.vec vecmath.vec}, :uses nil, :defs {ortho-axes {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :line 7, :column 7, :end-line 7, :end-column 17, :arglists (quote ([orientation]))}, :name grid.fhex/ortho-axes, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :end-column 17, :method-params ([orientation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([orientation]))}, hex-axes {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :line 17, :column 7, :end-line 17, :end-column 15, :arglists (quote ([{:keys [ortho-x ortho-y]}]))}, :name grid.fhex/hex-axes, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :end-column 15, :method-params ([p__75701]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [ortho-x ortho-y]}]))}, hex-geometry {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :line 23, :column 7, :end-line 23, :end-column 19, :arglists (quote ([{:keys [hex-x hex-y hex-z]}]))}, :name grid.fhex/hex-geometry, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :end-column 19, :method-params ([p__75706]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [hex-x hex-y hex-z]}]))}, define-geometry {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :line 28, :column 7, :end-line 28, :end-column 22, :arglists (quote ([orientation]))}, :name grid.fhex/define-geometry, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :end-column 22, :method-params ([orientation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([orientation]))}, orientations {:name grid.fhex/orientations, :file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :line 33, :column 1, :end-line 33, :end-column 18, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :line 33, :column 6, :end-line 33, :end-column 18}}, orientations-map {:name grid.fhex/orientations-map, :file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :line 34, :column 1, :end-line 34, :end-column 22, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :line 34, :column 6, :end-line 34, :end-column 22}}, ortho-scale {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :line 36, :column 7, :end-line 36, :end-column 18, :arglists (quote ([[ox oy oz] [vx vy]]))}, :name grid.fhex/ortho-scale, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :end-column 18, :method-params ([p__75713 p__75714]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[ox oy oz] [vx vy]]))}, cube->hex {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :line 38, :column 7, :end-line 38, :end-column 16, :arglists (quote ([v orientation]))}, :name grid.fhex/cube->hex, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :end-column 16, :method-params ([v orientation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v orientation]))}, hex->cube {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :line 42, :column 7, :end-line 42, :end-column 16, :arglists (quote ([v orientation])), :doc "Convert from hex (2-d) coordinates to cube"}, :name grid.fhex/hex->cube, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/fhex.cljc", :end-column 16, :method-params ([v orientation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v orientation])), :doc "Convert from hex (2-d) coordinates to cube"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:hex-x :hex-y :hex-corners :flat-topped :ortho-z :ortho-y :pointy-topped :ortho-x :hex-z}, :order [:pointy-topped :ortho-x :ortho-y :ortho-z :hex-x :hex-y :hex-z :hex-corners :flat-topped]}, :doc nil}