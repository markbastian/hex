{:use-macros nil, :excludes #{}, :name grid.quil-hex, :imports nil, :requires {q quil.core, quil.core quil.core, fhex grid.fhex, grid.fhex grid.fhex}, :uses nil, :defs {draw-hex-shape {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/quil_hex.cljc", :line 5, :column 7, :end-line 5, :end-column 21, :arglists (quote ([orientation]))}, :name grid.quil-hex/draw-hex-shape, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/quil_hex.cljc", :end-column 21, :method-params ([orientation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([orientation]))}, draw-coord {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/quil_hex.cljc", :line 12, :column 7, :end-line 12, :end-column 17, :arglists (quote ([c axis]))}, :name grid.quil-hex/draw-coord, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/quil_hex.cljc", :end-column 17, :method-params ([c axis]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c axis]))}, draw-coords {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/quil_hex.cljc", :line 19, :column 7, :end-line 19, :end-column 18, :arglists (quote ([i j k orientation]))}, :name grid.quil-hex/draw-coords, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/quil_hex.cljc", :end-column 18, :method-params ([i j k orientation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 4, :fn-var true, :arglists (quote ([i j k orientation]))}, draw-hex {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/quil_hex.cljc", :line 26, :column 7, :end-line 26, :end-column 15, :arglists (quote ([h orientation]))}, :name grid.quil-hex/draw-hex, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/quil_hex.cljc", :end-column 15, :method-params ([h orientation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([h orientation]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:hex-x :hex-y :hex-corners :center :hex-z}, :order [:hex-corners :hex-x :hex-y :hex-z :center]}, :doc nil}