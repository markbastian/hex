{:use-macros nil, :excludes #{}, :name grid.renderer, :imports nil, :requires {grid.quil-hex grid.quil-hex, grid.fhex grid.fhex, qh grid.quil-hex, q quil.core, grid.hex grid.hex, m quil.middleware, quil.core quil.core, quil.middleware quil.middleware, fhex grid.fhex, hex grid.hex}, :uses nil, :defs {setup {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :line 8, :column 7, :end-line 8, :end-column 12, :arglists (quote ([]))}, :name grid.renderer/setup, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :line 16, :column 7, :end-line 16, :end-column 11, :arglists (quote ([{:keys [board selected hovered world-radius orientation]}]))}, :name grid.renderer/draw, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :end-column 11, :method-params ([p__85983]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [board selected hovered world-radius orientation]}]))}, do-update {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :line 55, :column 7, :end-line 55, :end-column 16, :arglists (quote ([state]))}, :name grid.renderer/do-update, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :end-column 16, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, screen->axial {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :line 57, :column 7, :end-line 57, :end-column 20, :arglists (quote ([px py dim orientation]))}, :name grid.renderer/screen->axial, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :end-column 20, :method-params ([px py dim orientation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 4, :fn-var true, :arglists (quote ([px py dim orientation]))}, mouse-clicked {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :line 64, :column 7, :end-line 64, :end-column 20, :arglists (quote ([{:keys [board world-radius orientation], :as state} {:keys [x y]}]))}, :name grid.renderer/mouse-clicked, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :end-column 20, :method-params ([p__86055 p__86056]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [board world-radius orientation], :as state} {:keys [x y]}]))}, mouse-moved {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :line 69, :column 7, :end-line 69, :end-column 18, :arglists (quote ([{:keys [board world-radius orientation], :as state} {:keys [x y]}]))}, :name grid.renderer/mouse-moved, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :end-column 18, :method-params ([p__86065 p__86066]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [board world-radius orientation], :as state} {:keys [x y]}]))}, launch-sketch {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :line 74, :column 7, :end-line 74, :end-column 20, :arglists (quote ([{:keys [width height host]}]))}, :name grid.renderer/launch-sketch, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :end-column 20, :method-params ([p__86075]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [width height host]}]))}, launch-app {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :line 88, :column 25, :end-line 88, :end-column 35, :export true, :arglists (quote ([host width height]))}, :name grid.renderer/launch-app, :variadic false, :file "/Users/mbastian/workspace/hex/src/cljc/grid/renderer.cljc", :end-column 35, :method-params ([host width height]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 10, :line 88, :end-line 88, :max-fixed-arity 3, :fn-var true, :arglists (quote ([host width height]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :mouse-clicked :selected :flat-topped :mouse-moved :width :orientation :update :size :title :hovered :setup :middleware :host :world-radius :x :draw :height :board}, :order [:board :orientation :world-radius :flat-topped :selected :hovered :x :y :width :height :host :title :setup :update :draw :mouse-moved :mouse-clicked :middleware :size]}, :doc nil}