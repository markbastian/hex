;; Analyzed by ClojureScript 1.8.51
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name grid.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core}, :uses {atom reagent.core}, :defs {render {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljs/grid/core.cljs", :line 9, :column 7, :end-line 9, :end-column 13, :arglists (quote ([state]))}, :name grid.core/render, :variadic false, :file "src/cljs/grid/core.cljs", :end-column 13, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/mbastian/workspace/hex/src/cljs/grid/core.cljs", :line 29, :column 7, :end-line 29, :end-column 19, :arglists (quote ([]))}, :name grid.core/on-js-reload, :variadic false, :file "src/cljs/grid/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:div :h1}, :order [:div :h1]}, :doc nil}